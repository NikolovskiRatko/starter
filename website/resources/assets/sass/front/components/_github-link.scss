.fork__me {
  z-index: 999999999999;
  display: flex;
  align-items: center;
  padding: 0.2rem 2rem;
  font-size: 0.8rem;
  color: #333;
  @media (max-width: 480px) {
    display: none;
  }
}

#dino {
  display: flex;
  justify-content: flex-end;
  position: sticky;
  z-index: 555;

  @media (max-width: 768px) {
    position: sticky;
  }
}

.nes-gjuro {
  $octocat-colors: (#333);
  // prettier-ignore
  $octocat-1: (
      (0,0,1,1,1,1,1,1,1,0,0,0,0,0),
      (0,1,0,0,0,0,0,0,0,1,0,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (0,1,1,0,0,0,0,0,0,0,1,0,0,0),
      (0,0,1,0,0,0,0,0,0,0,1,1,0,0),
      (0,0,1,0,0,0,0,0,0,0,0,1,1,1),
      (0,1,0,0,0,0,0,0,0,0,0,0,1,1,1),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1),
      (0,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1),
      (0,0,1,1,1,0,1,1,1,0,1,1,1,1,0,0,0,0,0,)
  );
  // prettier-ignore
  $octocat-2: (
      (0,0,1,1,1,1,1,1,1,0,0,0,0,0),
      (0,1,0,0,0,0,0,0,0,1,0,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,1,0,0,0,1,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (1,0,0,0,0,0,0,0,0,0,1,0,0,0),
      (0,1,1,0,0,0,0,0,0,0,1,0,0,0),
      (0,0,1,0,0,0,0,0,0,0,1,1,0,0),
      (0,0,1,0,0,0,0,0,0,0,0,1,1,1),
      (0,1,0,0,0,0,0,0,0,0,0,0,1,1,1),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0),
      (0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0),
      (0,1,1,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,0,0),
      (0,0,0,1,1,1,0,1,1,1,0,1,1,1,1,0,0,0,0,)
  );
  $size: 6px;
  position: relative;
  display: inline-block;
  width: $size * length(nth($octocat-1, 1));
  height: $size * length($octocat-1);

  &::before {
    position: absolute;
    top: -$size;
    left: -$size;
    content: "";
    background: transparent;

    @include pixelize($size, $octocat-1, $octocat-colors);
    @include fill-gaps();
  }

  &.animate::before {
    animation: wave 0.5s infinite steps(1);
  }

  @keyframes wave {
    50% {
      @include pixelize($size, $octocat-2, $octocat-colors);
    }
  }
}
